import math

def print_board(board):
    print("\n   0   1   2")
    for i, row in enumerate(board):
        print(f"{i}  " + " | ".join(row))
        if i < 2:
            print("  ---+---+---")
    print()

def check_winner(board, player):
    for i in range(3):
        if all(board[i][j] == player for j in range(3)) or \
           all(board[j][i] == player for j in range(3)):
            return True
    return board[0][0] == board[1][1] == board[2][2] == player or \
           board[0][2] == board[1][1] == board[2][0] == player

def is_draw(board):
    return all(cell != " " for row in board for cell in row)

def minimax(board, is_max):
    if check_winner(board, "O"):
        return 1
    if check_winner(board, "X"):
        return -1
    if is_draw(board):
        return 0

    best = -math.inf if is_max else math.inf
    for i in range(3):
        for j in range(3):
            if board[i][j] == " ":
                board[i][j] = "O" if is_max else "X"
                score = minimax(board, not is_max)
                board[i][j] = " "
                best = max(best, score) if is_max else min(best, score)
    return best

def best_move(board):
    move = None
    best_score = -math.inf
    for i in range(3):
        for j in range(3):
            if board[i][j] == " ":
                board[i][j] = "O"
                score = minimax(board, False)
                board[i][j] = " "
                if score > best_score:
                    best_score = score
                    move = (i, j)
    return move

def play_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    print("Welcome to 3x3 Tic-Tac-Toe!")
    print("You are X, AI is O.")
    print_board(board)

    while True:
        try:
            row = int(input("Enter row (0-2): "))
            col = int(input("Enter column (0-2): "))
            if board[row][col] != " ":
                print("That cell is already taken. Try again.")
                continue
        except (ValueError, IndexError):
            print("Invalid input. Please enter numbers from 0 to 2.")
            continue

        board[row][col] = "X"
        print_board(board)

        if check_winner(board, "X"):
            print("🎉 You win!")
            break
        if is_draw(board):
            print("🤝 It's a draw!")
            break
        
        print("AI is making a move...")
        ai_row, ai_col = best_move(board)
        board[ai_row][ai_col] = "O"
        print_board(board)

        if check_winner(board, "O"):
            print("🤖 AI wins!")
            break
        if is_draw(board):
            print("🤝 It's a draw!")
            break

play_game()


